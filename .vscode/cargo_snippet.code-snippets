{
  "modinv": {
    "scope": "rust",
    "prefix": "modinv",
    "body": [
      "use std::mem::swap;",
      "fn modinv(a: &i128, m: &i128) -> i128 {",
      "    let (mut a, mut b, mut u, mut v) = (*a, *m, 1, 0);",
      "    while b > 0 {",
      "        let t = a / b;",
      "        a -= t * b;",
      "        u -= t * v;",
      "        swap(&mut a, &mut b);",
      "        swap(&mut u, &mut v);",
      "    }",
      "    if u < 0 {",
      "        u + m",
      "    } else {",
      "        u",
      "    }",
      "}"
    ]
  },
  "rle": {
    "scope": "rust",
    "prefix": "rle",
    "body": [
      "fn rle(s: Vec<char>) -> Vec<(char, usize)> {",
      "    let mut res: Vec<(char, usize)> = Vec::new();",
      "    let mut pre = ' ';",
      "    let mut chain = 1;",
      "    for c in s.into_iter() {",
      "        if c == pre {",
      "            chain += 1;",
      "        } else {",
      "            if pre != ' ' {",
      "                res.push((pre, chain));",
      "            }",
      "            pre = c;",
      "            chain = 1;",
      "        }",
      "    }",
      "    res.push((pre, chain));",
      "    res",
      "}"
    ]
  }
}
